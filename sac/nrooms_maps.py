# n_rooms_maps.py
from typing import Dict, List
import numpy as np

# --- Layouts (ASCII maps) ---
EMPTY_ROOM = """
############
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
############
""".strip("\n")

TEST_ROOM = """
####
#..#
####
""".strip("\n")

UNREACHABLE_TEST = """
############
#----------#
############
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
#..........#
############
""".strip("\n")

FOUR_ROOMS_A = """
#######################
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#######################
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#######################
""".strip("\n")

FOUR_ROOMS_B = """
#######################
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#######################
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#######################
""".strip("\n")

FOUR_ROOMS_C = """
#######################
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#######################
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#..........#----------#
#######################
""".strip("\n")

FOUR_ROOMS_D = """
#######################
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#----------#----------#
#######################
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#----------#..........#
#######################
""".strip("\n")

REGISTERED_LAYOUTS: Dict[str, List[str]] = {
    "empty_room": [EMPTY_ROOM],
    "unreachable": [UNREACHABLE_TEST],
    "4_rooms": [FOUR_ROOMS_A, FOUR_ROOMS_B, FOUR_ROOMS_C, FOUR_ROOMS_D],
    "test_room": [TEST_ROOM],
}

# --- Char semantics & colors (pure data) ---
WALL = "#"
FLOOR_CHARS = (".", "-")
COLOR_WALL  = np.array([0,   0,   0],   dtype=np.uint8)  # black
COLOR_FLOOR = np.array([255, 255, 255], dtype=np.uint8)  # white
COLOR_AGENT = np.array([255, 0,   0],   dtype=np.uint8)  # red
COLOR_GOAL  = np.array([0,   255, 0],   dtype=np.uint8)  # green

# --- Tiny helpers (no Gym code here) ---
def parse_map(map_str: str) -> np.ndarray:
    return np.array([list(line) for line in map_str.split("\n")], dtype="U1")

def list_floor_positions(grid: np.ndarray) -> np.ndarray:
    # You currently only sample '.' (not '-') for start/goal; keep that behavior:
    return np.argwhere(grid == ".")
